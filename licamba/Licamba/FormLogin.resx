<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>